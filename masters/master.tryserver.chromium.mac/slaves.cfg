# -*- python -*-
# ex: set syntax=python:
# Copyright 2014 The Chromium Authors. All rights reserved.
# Use of this source code is governed by a BSD-style license that can be
# found in the LICENSE file.

# See master.experimental/slaves.cfg for documentation.

def mac():
  optional_slaves = ['vm%d-m4' % i
                      for i in [723, 804, 1025, 1026]]
  optional_builders = [
      'mac_chromium_archive_rel_ng',
      'mac_chromium_asan_rel_ng',
      'mac_chromium_gn_upload',
      'mac_nacl_sdk',
      'mac_nacl_sdk_build',
      'mac_upload_clang',
      'mac-views-rel',
  ]

  # TODO(dpranke): FindIt doesn't use the *variable* bots any more, so move
  # these into the optional pool.

  # Highend physical mac pro running OSX 10.10.
  optional3_slaves_highend = ['build554-m4']
  optional3_builders_highend = [
      'mac_chromium_variable_10.10',
      'mac_chromium_variable_10.10_layout',
  ]

  optional4_slaves = ['build9-m4']
  optional4_builders = [
      'mac_chromium_variable_10.12',
  ]

  # Highend physical mac pro running OSX Mac 10.11.
  optional4_slaves_highend = ['build555-m4']
  optional4_builders_highend = [
      'mac_chromium_variable_10.11',
      'mac_chromium_variable_10.11_layout',
  ]

  # Highend physical mac pros running OSX 10.9.
  optional5_slaves_highend = ['build556-m4', 'build557-m4']
  optional5_builders_highend = [
      'mac_chromium_asan_variable',
      'mac_chromium_variable',
      'mac_chromium_variable_archive',
      'mac_chromium_variable_chrome',
      'mac_chromium_variable_layout',
  ]

  # Highend physical mac pros running OSX 10.9 for Findit flake analysis.
  optional6_slaves_highend = ['build48-m4']
  optional6_builders_highend = [
      'mac_chromium_variable_deflake',
  ]

  out = []
  out.extend(
    {
      'master': 'TryServerChromiumMac',
      'builder': optional_builders,
      'hostname': slave,
      'os': 'mac',
      'version': '10.12',
      'bits': '64',
      'pool': 'mac_optional',
    } for slave in optional_slaves
  )

  out.extend(
    {
      'master': 'TryServerChromiumMac',
      'builder': optional3_builders_highend,
      'hostname': slave,
      'os': 'mac',
      'version': '10.10',
      'bits': '64',
      'pool': 'mac_optional_10_10_highend',
    } for slave in optional3_slaves_highend
  )
  out.extend(
    {
      'master': 'TryServerChromiumMac',
      'builder': optional4_builders,
      'hostname': slave,
      'os': 'mac',
      'version': '10.12',
      'bits': '64',
      'pool': 'mac_optional_10_12',
    } for slave in optional4_slaves
  )
  out.extend(
    {
      'master': 'TryServerChromiumMac',
      'builder': optional4_builders_highend,
      'hostname': slave,
      'os': 'mac',
      'version': '10.11',
      'bits': '64',
      'pool': 'mac_optional_10_11_highend',
    } for slave in optional4_slaves_highend
  )
  out.extend(
    {
      'master': 'TryServerChromiumMac',
      'builder': optional5_builders_highend,
      'hostname': slave,
      'os': 'mac',
      'version': '10.9',
      'bits': '64',
      'pool': 'mac_optional_10_9_highend',
    } for slave in optional5_slaves_highend
  )
  out.extend(
    {
      'master': 'TryServerChromiumMac',
      'builder': optional6_builders_highend,
      'hostname': slave,
      'os': 'mac',
      'version': '10.9',
      'bits': '64',
      'pool': 'mac_optional_10_9_highend_2',
    } for slave in optional6_slaves_highend
  )

  return out


def ios():
  slave_map = {
    'ios-simulator-cronet': [
      'vm255-m4',
      'vm667-m4',
    ],
  }

  slaves = []

  for builder in sorted(slave_map):
    slaves.extend([{
      'master': 'TryServerChromiumMac',
      'builder': builder,
      'hostname': slave,
      'os': 'mac',
      'version': '10.11',
    } for slave in slave_map[builder]])

  return slaves


slaves = mac() + ios()
