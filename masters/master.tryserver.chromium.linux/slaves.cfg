# -*- python -*-
# ex: set syntax=python:
# Copyright 2014 The Chromium Authors. All rights reserved.
# Use of this source code is governed by a BSD-style license that can be
# found in the LICENSE file.

# See master.experimental/slaves.cfg for documentation.

def linux():
  # Slave pools have two competing constraints:
  #  - load: peak number of concurrent builds. Larger pools are safer.
  #  - disk space: too many builders on the same pool will exhaust
  #     the disk space on all slaves. Smaller pools are safer.
  #
  # Currently, we need two optional pools due to disk space. When
  # adding new builders, try sharing the existing slavebuilddir.
  optional_slaves2 = range(714, 719)

  optional_builders2 = [
    'linux_chromium_gn_upload',               # build_and_upload_gn
    'linux_nacl_sdk',                         # linux_nacl_sdk
    'linux_nacl_sdk_build',                   # linux_nacl_sdk_build
  ]

  # Super beefy machines.
  optional_highmem_slaves = [904, 905]
  optional_highmem_builders = [
    'linux_upload_clang',
    'linux_chromium_cfi_rel_ng',
  ]

  # Set up normal slaves.
  result = []
  for slave in optional_slaves2:
    result.append({
      'master': 'TryServerChromiumLinux',
      'os': 'linux',
      'version': 'trusty',
      'bits': '64',
      'builder': optional_builders2,
      'hostname': 'slave%d-c4' % slave,
      'pool': 'linux_optional2',
    })
  for slave in optional_highmem_slaves:
    result.append({
      'master': 'TryServerChromiumLinux',
      'os': 'linux',
      'version': 'trusty',
      'bits': '64',
      'builder': optional_highmem_builders,
      'hostname': 'slave%d-c4' % slave,
      'pool': 'linux_optional_highmem',
    })

  return result


slaves = linux()
