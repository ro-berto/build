[
  {
    "cmd": [
      "python",
      "-u",
      "RECIPE_MODULE[recipe_engine::file]\\resources\\fileutil.py",
      "--json-output",
      "/path/to/tmp/json",
      "ensure-directory",
      "--mode",
      "0777",
      "[START_DIR]\\go\\src\\chromium.googlesource.com\\enterprise"
    ],
    "infra_step": true,
    "name": "init src_root if not exists"
  },
  {
    "cmd": [
      "python",
      "-u",
      "RECIPE_MODULE[depot_tools::bot_update]\\resources\\bot_update.py",
      "--spec-path",
      "cache_dir = '[CACHE]\\\\git'\nsolutions = [{'deps_file': '.DEPS.git', 'managed': True, 'name': 'cel', 'url': 'https://chromium.googlesource.com/enterprise/cel.git'}]",
      "--revision_mapping_file",
      "{\"got_revision\": \"cel\"}",
      "--git-cache-dir",
      "[CACHE]\\git",
      "--cleanup-dir",
      "[CLEANUP]\\bot_update",
      "--output_json",
      "/path/to/tmp/json",
      "--revision",
      "cel@2d72510e447ab60a9728aeea2362d8be2cbd7789"
    ],
    "cwd": "[START_DIR]\\go\\src\\chromium.googlesource.com\\enterprise",
    "env_prefixes": {
      "PATH": [
        "RECIPE_REPO[depot_tools]"
      ]
    },
    "infra_step": true,
    "name": "bot_update",
    "~followup_annotations": [
      "@@@STEP_TEXT@Some step text@@@",
      "@@@STEP_LOG_LINE@json.output@{@@@",
      "@@@STEP_LOG_LINE@json.output@  \"did_run\": true, @@@",
      "@@@STEP_LOG_LINE@json.output@  \"fixed_revisions\": {@@@",
      "@@@STEP_LOG_LINE@json.output@    \"cel\": \"2d72510e447ab60a9728aeea2362d8be2cbd7789\"@@@",
      "@@@STEP_LOG_LINE@json.output@  }, @@@",
      "@@@STEP_LOG_LINE@json.output@  \"manifest\": {@@@",
      "@@@STEP_LOG_LINE@json.output@    \"cel\": {@@@",
      "@@@STEP_LOG_LINE@json.output@      \"repository\": \"https://fake.org/cel.git\", @@@",
      "@@@STEP_LOG_LINE@json.output@      \"revision\": \"a7e3c7b71a111ae16c073dbf02c989697668310c\"@@@",
      "@@@STEP_LOG_LINE@json.output@    }@@@",
      "@@@STEP_LOG_LINE@json.output@  }, @@@",
      "@@@STEP_LOG_LINE@json.output@  \"patch_failure\": false, @@@",
      "@@@STEP_LOG_LINE@json.output@  \"patch_root\": \"cel\", @@@",
      "@@@STEP_LOG_LINE@json.output@  \"properties\": {@@@",
      "@@@STEP_LOG_LINE@json.output@    \"got_revision\": \"a7e3c7b71a111ae16c073dbf02c989697668310c\", @@@",
      "@@@STEP_LOG_LINE@json.output@    \"got_revision_cp\": \"refs/heads/master@{#22871}\"@@@",
      "@@@STEP_LOG_LINE@json.output@  }, @@@",
      "@@@STEP_LOG_LINE@json.output@  \"root\": \"cel\", @@@",
      "@@@STEP_LOG_LINE@json.output@  \"source_manifest\": {@@@",
      "@@@STEP_LOG_LINE@json.output@    \"directories\": {@@@",
      "@@@STEP_LOG_LINE@json.output@      \"cel\": {@@@",
      "@@@STEP_LOG_LINE@json.output@        \"git_checkout\": {@@@",
      "@@@STEP_LOG_LINE@json.output@          \"repo_url\": \"https://fake.org/cel.git\", @@@",
      "@@@STEP_LOG_LINE@json.output@          \"revision\": \"a7e3c7b71a111ae16c073dbf02c989697668310c\"@@@",
      "@@@STEP_LOG_LINE@json.output@        }@@@",
      "@@@STEP_LOG_LINE@json.output@      }@@@",
      "@@@STEP_LOG_LINE@json.output@    }, @@@",
      "@@@STEP_LOG_LINE@json.output@    \"version\": 0@@@",
      "@@@STEP_LOG_LINE@json.output@  }, @@@",
      "@@@STEP_LOG_LINE@json.output@  \"step_text\": \"Some step text\"@@@",
      "@@@STEP_LOG_LINE@json.output@}@@@",
      "@@@STEP_LOG_END@json.output@@@",
      "@@@SET_BUILD_PROPERTY@got_revision@\"a7e3c7b71a111ae16c073dbf02c989697668310c\"@@@",
      "@@@SET_BUILD_PROPERTY@got_revision_cp@\"refs/heads/master@{#22871}\"@@@"
    ]
  },
  {
    "cmd": [
      "python",
      "-u",
      "RECIPE_REPO[depot_tools]\\gclient.py",
      "runhooks"
    ],
    "cwd": "[START_DIR]\\go\\src\\chromium.googlesource.com\\enterprise",
    "env_suffixes": {
      "PATH": [
        "RECIPE_REPO[depot_tools]"
      ]
    },
    "name": "gclient runhooks"
  },
  {
    "cmd": [
      "cipd.bat",
      "ensure",
      "-root",
      "[START_DIR]\\packages",
      "-ensure-file",
      "infra/celab/celab/${platform} version:1.0.0",
      "-json-output",
      "/path/to/tmp/json"
    ],
    "name": "ensure_installed",
    "~followup_annotations": [
      "@@@STEP_LOG_LINE@json.output@{@@@",
      "@@@STEP_LOG_LINE@json.output@  \"result\": [@@@",
      "@@@STEP_LOG_LINE@json.output@    {@@@",
      "@@@STEP_LOG_LINE@json.output@      \"instance_id\": \"resolved-instance_id-of-version:1.0.0---\", @@@",
      "@@@STEP_LOG_LINE@json.output@      \"package\": \"infra/celab/celab/${platform}\"@@@",
      "@@@STEP_LOG_LINE@json.output@    }@@@",
      "@@@STEP_LOG_LINE@json.output@  ]@@@",
      "@@@STEP_LOG_LINE@json.output@}@@@",
      "@@@STEP_LOG_END@json.output@@@"
    ]
  },
  {
    "cmd": [],
    "name": "RECIPE CRASH (Uncaught exception)",
    "~followup_annotations": [
      "@@@STEP_EXCEPTION@@@",
      "The recipe has crashed at point 'Uncaught exception'!",
      "",
      "Traceback (most recent call last):",
      "  File \"RECIPE_REPO[recipe_engine]/recipe_engine/internal/engine.py\", in run_steps",
      "    raw_result = recipe_obj.run_steps(api, engine)",
      "  File \"RECIPE_REPO[recipe_engine]/recipe_engine/internal/recipe_deps.py\", in run_steps",
      "    properties_def, api=api)",
      "  File \"RECIPE_REPO[recipe_engine]/recipe_engine/internal/property_invoker.py\", in invoke_with_properties",
      "    arg_names, **additional_args)",
      "  File \"RECIPE_REPO[recipe_engine]/recipe_engine/internal/property_invoker.py\", in _invoke_with_properties",
      "    return callable_obj(*props, **additional_args)",
      "  File \"RECIPE_REPO[build]/scripts/slave/recipes/celab.py\", line 71, in RunSteps",
      "    _RunTests(api, checkout, tests, cel_ctl)",
      "  File \"RECIPE_REPO[build]/scripts/slave/recipes/celab.py\", line 152, in _RunTests",
      "    raise ValueError('pool_name and pool_size must be defined with `tests`.')",
      "ValueError: pool_name and pool_size must be defined with `tests`."
    ]
  },
  {
    "failure": {
      "humanReason": "Uncaught Exception: ValueError('pool_name and pool_size must be defined with `tests`.',)"
    },
    "name": "$result"
  }
]