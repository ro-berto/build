[
  {
    "cmd": [
      "python",
      "-u",
      "RECIPE_MODULE[depot_tools::bot_update]/resources/bot_update.py",
      "--spec-path",
      "cache_dir = '[CACHE]/git'\nsolutions = [{'custom_vars': {'checkout_telemetry_dependencies': 'True'}, 'deps_file': '.DEPS.git', 'managed': True, 'name': 'src', 'url': 'https://chromium.googlesource.com/chromium/src.git'}]\ntarget_os = ['android']",
      "--patch_root",
      "src",
      "--revision_mapping_file",
      "{\"got_angle_revision\": \"src/third_party/angle\", \"got_buildtools_revision\": \"src/buildtools\", \"got_nacl_revision\": \"src/native_client\", \"got_revision\": \"src\", \"got_swarming_client_revision\": \"src/tools/swarming_client\", \"got_v8_revision\": \"src/v8\", \"got_webrtc_revision\": \"src/third_party/webrtc\"}",
      "--git-cache-dir",
      "[CACHE]/git",
      "--cleanup-dir",
      "[CLEANUP]/bot_update",
      "--output_json",
      "/path/to/tmp/json",
      "--revision",
      "src@HEAD"
    ],
    "env": {
      "CHROME_HEADLESS": "1"
    },
    "env_prefixes": {
      "PATH": [
        "RECIPE_PACKAGE_REPO[depot_tools]"
      ]
    },
    "infra_step": true,
    "name": "bot_update",
    "~followup_annotations": [
      "@@@STEP_TEXT@Some step text@@@",
      "@@@STEP_LOG_LINE@json.output@{@@@",
      "@@@STEP_LOG_LINE@json.output@  \"did_run\": true, @@@",
      "@@@STEP_LOG_LINE@json.output@  \"fixed_revisions\": {@@@",
      "@@@STEP_LOG_LINE@json.output@    \"src\": \"HEAD\"@@@",
      "@@@STEP_LOG_LINE@json.output@  }, @@@",
      "@@@STEP_LOG_LINE@json.output@  \"manifest\": {@@@",
      "@@@STEP_LOG_LINE@json.output@    \"src\": {@@@",
      "@@@STEP_LOG_LINE@json.output@      \"repository\": \"https://fake.org/src.git\", @@@",
      "@@@STEP_LOG_LINE@json.output@      \"revision\": \"f27fede2220bcd326aee3e86ddfd4ebd0fe58cb9\"@@@",
      "@@@STEP_LOG_LINE@json.output@    }, @@@",
      "@@@STEP_LOG_LINE@json.output@    \"src/buildtools\": {@@@",
      "@@@STEP_LOG_LINE@json.output@      \"repository\": \"https://fake.org/src/buildtools.git\", @@@",
      "@@@STEP_LOG_LINE@json.output@      \"revision\": \"f0319a328b2809876916353cb994259692140934\"@@@",
      "@@@STEP_LOG_LINE@json.output@    }, @@@",
      "@@@STEP_LOG_LINE@json.output@    \"src/native_client\": {@@@",
      "@@@STEP_LOG_LINE@json.output@      \"repository\": \"https://fake.org/src/native_client.git\", @@@",
      "@@@STEP_LOG_LINE@json.output@      \"revision\": \"d998e125e8253980d76e269b7982aeeefc1b9b50\"@@@",
      "@@@STEP_LOG_LINE@json.output@    }, @@@",
      "@@@STEP_LOG_LINE@json.output@    \"src/third_party/angle\": {@@@",
      "@@@STEP_LOG_LINE@json.output@      \"repository\": \"https://fake.org/src/third_party/angle.git\", @@@",
      "@@@STEP_LOG_LINE@json.output@      \"revision\": \"fac9503c46405f77757b9a728eb85b8d7bc6080c\"@@@",
      "@@@STEP_LOG_LINE@json.output@    }, @@@",
      "@@@STEP_LOG_LINE@json.output@    \"src/third_party/webrtc\": {@@@",
      "@@@STEP_LOG_LINE@json.output@      \"repository\": \"https://fake.org/src/third_party/webrtc.git\", @@@",
      "@@@STEP_LOG_LINE@json.output@      \"revision\": \"0f90628433546e61d9268596da93418c623137f4\"@@@",
      "@@@STEP_LOG_LINE@json.output@    }, @@@",
      "@@@STEP_LOG_LINE@json.output@    \"src/tools/swarming_client\": {@@@",
      "@@@STEP_LOG_LINE@json.output@      \"repository\": \"https://fake.org/src/tools/swarming_client.git\", @@@",
      "@@@STEP_LOG_LINE@json.output@      \"revision\": \"a0ee5d99f1d4b38ddaa4c759c837980b63b99566\"@@@",
      "@@@STEP_LOG_LINE@json.output@    }, @@@",
      "@@@STEP_LOG_LINE@json.output@    \"src/v8\": {@@@",
      "@@@STEP_LOG_LINE@json.output@      \"repository\": \"https://fake.org/src/v8.git\", @@@",
      "@@@STEP_LOG_LINE@json.output@      \"revision\": \"801ada225ddc271c132c3a35f03975671d43e399\"@@@",
      "@@@STEP_LOG_LINE@json.output@    }@@@",
      "@@@STEP_LOG_LINE@json.output@  }, @@@",
      "@@@STEP_LOG_LINE@json.output@  \"patch_failure\": false, @@@",
      "@@@STEP_LOG_LINE@json.output@  \"patch_root\": \"src\", @@@",
      "@@@STEP_LOG_LINE@json.output@  \"properties\": {@@@",
      "@@@STEP_LOG_LINE@json.output@    \"got_angle_revision\": \"fac9503c46405f77757b9a728eb85b8d7bc6080c\", @@@",
      "@@@STEP_LOG_LINE@json.output@    \"got_angle_revision_cp\": \"refs/heads/master@{#297276}\", @@@",
      "@@@STEP_LOG_LINE@json.output@    \"got_buildtools_revision\": \"f0319a328b2809876916353cb994259692140934\", @@@",
      "@@@STEP_LOG_LINE@json.output@    \"got_buildtools_revision_cp\": \"refs/heads/master@{#182578}\", @@@",
      "@@@STEP_LOG_LINE@json.output@    \"got_nacl_revision\": \"d998e125e8253980d76e269b7982aeeefc1b9b50\", @@@",
      "@@@STEP_LOG_LINE@json.output@    \"got_nacl_revision_cp\": \"refs/heads/master@{#274981}\", @@@",
      "@@@STEP_LOG_LINE@json.output@    \"got_revision\": \"f27fede2220bcd326aee3e86ddfd4ebd0fe58cb9\", @@@",
      "@@@STEP_LOG_LINE@json.output@    \"got_revision_cp\": \"refs/heads/master@{#170242}\", @@@",
      "@@@STEP_LOG_LINE@json.output@    \"got_swarming_client_revision\": \"a0ee5d99f1d4b38ddaa4c759c837980b63b99566\", @@@",
      "@@@STEP_LOG_LINE@json.output@    \"got_swarming_client_revision_cp\": \"refs/heads/master@{#276089}\", @@@",
      "@@@STEP_LOG_LINE@json.output@    \"got_v8_revision\": \"801ada225ddc271c132c3a35f03975671d43e399\", @@@",
      "@@@STEP_LOG_LINE@json.output@    \"got_v8_revision_cp\": \"refs/heads/master@{#43426}\", @@@",
      "@@@STEP_LOG_LINE@json.output@    \"got_webrtc_revision\": \"0f90628433546e61d9268596da93418c623137f4\", @@@",
      "@@@STEP_LOG_LINE@json.output@    \"got_webrtc_revision_cp\": \"refs/heads/master@{#120644}\"@@@",
      "@@@STEP_LOG_LINE@json.output@  }, @@@",
      "@@@STEP_LOG_LINE@json.output@  \"root\": \"src\", @@@",
      "@@@STEP_LOG_LINE@json.output@  \"source_manifest\": {@@@",
      "@@@STEP_LOG_LINE@json.output@    \"git_checkout\": {@@@",
      "@@@STEP_LOG_LINE@json.output@      \"src\": {@@@",
      "@@@STEP_LOG_LINE@json.output@        \"repo_url\": \"https://fake.org/src.git\", @@@",
      "@@@STEP_LOG_LINE@json.output@        \"revision\": \"f27fede2220bcd326aee3e86ddfd4ebd0fe58cb9\"@@@",
      "@@@STEP_LOG_LINE@json.output@      }, @@@",
      "@@@STEP_LOG_LINE@json.output@      \"src/buildtools\": {@@@",
      "@@@STEP_LOG_LINE@json.output@        \"repo_url\": \"https://fake.org/src/buildtools.git\", @@@",
      "@@@STEP_LOG_LINE@json.output@        \"revision\": \"f0319a328b2809876916353cb994259692140934\"@@@",
      "@@@STEP_LOG_LINE@json.output@      }, @@@",
      "@@@STEP_LOG_LINE@json.output@      \"src/native_client\": {@@@",
      "@@@STEP_LOG_LINE@json.output@        \"repo_url\": \"https://fake.org/src/native_client.git\", @@@",
      "@@@STEP_LOG_LINE@json.output@        \"revision\": \"d998e125e8253980d76e269b7982aeeefc1b9b50\"@@@",
      "@@@STEP_LOG_LINE@json.output@      }, @@@",
      "@@@STEP_LOG_LINE@json.output@      \"src/third_party/angle\": {@@@",
      "@@@STEP_LOG_LINE@json.output@        \"repo_url\": \"https://fake.org/src/third_party/angle.git\", @@@",
      "@@@STEP_LOG_LINE@json.output@        \"revision\": \"fac9503c46405f77757b9a728eb85b8d7bc6080c\"@@@",
      "@@@STEP_LOG_LINE@json.output@      }, @@@",
      "@@@STEP_LOG_LINE@json.output@      \"src/third_party/webrtc\": {@@@",
      "@@@STEP_LOG_LINE@json.output@        \"repo_url\": \"https://fake.org/src/third_party/webrtc.git\", @@@",
      "@@@STEP_LOG_LINE@json.output@        \"revision\": \"0f90628433546e61d9268596da93418c623137f4\"@@@",
      "@@@STEP_LOG_LINE@json.output@      }, @@@",
      "@@@STEP_LOG_LINE@json.output@      \"src/tools/swarming_client\": {@@@",
      "@@@STEP_LOG_LINE@json.output@        \"repo_url\": \"https://fake.org/src/tools/swarming_client.git\", @@@",
      "@@@STEP_LOG_LINE@json.output@        \"revision\": \"a0ee5d99f1d4b38ddaa4c759c837980b63b99566\"@@@",
      "@@@STEP_LOG_LINE@json.output@      }, @@@",
      "@@@STEP_LOG_LINE@json.output@      \"src/v8\": {@@@",
      "@@@STEP_LOG_LINE@json.output@        \"repo_url\": \"https://fake.org/src/v8.git\", @@@",
      "@@@STEP_LOG_LINE@json.output@        \"revision\": \"801ada225ddc271c132c3a35f03975671d43e399\"@@@",
      "@@@STEP_LOG_LINE@json.output@      }@@@",
      "@@@STEP_LOG_LINE@json.output@    }, @@@",
      "@@@STEP_LOG_LINE@json.output@    \"version\": 0@@@",
      "@@@STEP_LOG_LINE@json.output@  }, @@@",
      "@@@STEP_LOG_LINE@json.output@  \"step_text\": \"Some step text\"@@@",
      "@@@STEP_LOG_LINE@json.output@}@@@",
      "@@@STEP_LOG_END@json.output@@@",
      "@@@SET_BUILD_PROPERTY@got_angle_revision@\"fac9503c46405f77757b9a728eb85b8d7bc6080c\"@@@",
      "@@@SET_BUILD_PROPERTY@got_angle_revision_cp@\"refs/heads/master@{#297276}\"@@@",
      "@@@SET_BUILD_PROPERTY@got_buildtools_revision@\"f0319a328b2809876916353cb994259692140934\"@@@",
      "@@@SET_BUILD_PROPERTY@got_buildtools_revision_cp@\"refs/heads/master@{#182578}\"@@@",
      "@@@SET_BUILD_PROPERTY@got_nacl_revision@\"d998e125e8253980d76e269b7982aeeefc1b9b50\"@@@",
      "@@@SET_BUILD_PROPERTY@got_nacl_revision_cp@\"refs/heads/master@{#274981}\"@@@",
      "@@@SET_BUILD_PROPERTY@got_revision@\"f27fede2220bcd326aee3e86ddfd4ebd0fe58cb9\"@@@",
      "@@@SET_BUILD_PROPERTY@got_revision_cp@\"refs/heads/master@{#170242}\"@@@",
      "@@@SET_BUILD_PROPERTY@got_swarming_client_revision@\"a0ee5d99f1d4b38ddaa4c759c837980b63b99566\"@@@",
      "@@@SET_BUILD_PROPERTY@got_swarming_client_revision_cp@\"refs/heads/master@{#276089}\"@@@",
      "@@@SET_BUILD_PROPERTY@got_v8_revision@\"801ada225ddc271c132c3a35f03975671d43e399\"@@@",
      "@@@SET_BUILD_PROPERTY@got_v8_revision_cp@\"refs/heads/master@{#43426}\"@@@",
      "@@@SET_BUILD_PROPERTY@got_webrtc_revision@\"0f90628433546e61d9268596da93418c623137f4\"@@@",
      "@@@SET_BUILD_PROPERTY@got_webrtc_revision_cp@\"refs/heads/master@{#120644}\"@@@"
    ]
  },
  {
    "cmd": [],
    "env": {
      "CHROME_HEADLESS": "1"
    },
    "name": "ensure_goma"
  },
  {
    "cmd": [
      "cipd",
      "ensure",
      "-root",
      "[CACHE]/goma_client",
      "-ensure-file",
      "infra_internal/goma/client/linux-amd64 release",
      "-json-output",
      "/path/to/tmp/json",
      "-service-account-json",
      "/creds/service_accounts/service-account-goma-client.json"
    ],
    "env": {
      "CHROME_HEADLESS": "1"
    },
    "infra_step": true,
    "name": "ensure_goma.ensure_installed",
    "~followup_annotations": [
      "@@@STEP_NEST_LEVEL@1@@@",
      "@@@STEP_LOG_LINE@json.output@{@@@",
      "@@@STEP_LOG_LINE@json.output@  \"result\": [@@@",
      "@@@STEP_LOG_LINE@json.output@    {@@@",
      "@@@STEP_LOG_LINE@json.output@      \"instance_id\": \"resolved-instance_id-of-release---------\", @@@",
      "@@@STEP_LOG_LINE@json.output@      \"package\": \"infra_internal/goma/client/linux-amd64\"@@@",
      "@@@STEP_LOG_LINE@json.output@    }@@@",
      "@@@STEP_LOG_LINE@json.output@  ]@@@",
      "@@@STEP_LOG_LINE@json.output@}@@@",
      "@@@STEP_LOG_END@json.output@@@"
    ]
  },
  {
    "cmd": [
      "python",
      "-u",
      "[START_DIR]/src/tools/swarming_client/swarming.py",
      "--version"
    ],
    "env": {
      "CHROME_HEADLESS": "1"
    },
    "name": "swarming.py --version",
    "stdout": "/path/to/tmp/",
    "~followup_annotations": [
      "@@@STEP_TEXT@0.8.6@@@"
    ]
  },
  {
    "cmd": [
      "python",
      "-u",
      "RECIPE_PACKAGE_REPO[depot_tools]/gclient.py",
      "runhooks"
    ],
    "cwd": "[START_DIR]/src",
    "env": {
      "CHROME_HEADLESS": "1",
      "GYP_CROSSCOMPILE": "1",
      "GYP_DEFINES": "OS=android component=static_library fastbuild=1 gomadir='[CACHE]/goma_client' target_arch=arm use_goma=1",
      "PATH": "[START_DIR]/src/third_party/android_tools/sdk/platform-tools:[START_DIR]/src/build/android:<PATH>:RECIPE_PACKAGE_REPO[depot_tools]"
    },
    "name": "gclient runhooks"
  },
  {
    "cmd": [
      "python",
      "-u",
      "[START_DIR]/src/testing/scripts/get_compile_targets.py",
      "--output",
      "/path/to/tmp/json",
      "--",
      "--build-config-fs",
      "Release",
      "--use-src-side-runtest-py",
      "--paths",
      "{\"checkout\": \"[START_DIR]/src\", \"runit.py\": \"RECIPE_PACKAGE_REPO[build]/scripts/tools/runit.py\", \"runtest.py\": \"RECIPE_PACKAGE_REPO[build]/scripts/slave/runtest.py\"}",
      "--properties",
      "{\"bot_id\": \"test_bot\", \"buildername\": \"Android Tests\", \"buildnumber\": 571, \"mastername\": \"chromium.linux\", \"slavename\": \"test_bot\", \"target_platform\": \"android\"}"
    ],
    "env": {
      "CHROME_HEADLESS": "1"
    },
    "name": "get compile targets for scripts",
    "~followup_annotations": [
      "@@@STEP_LOG_LINE@json.output@{}@@@",
      "@@@STEP_LOG_END@json.output@@@"
    ]
  },
  {
    "cmd": [
      "python",
      "-u",
      "\nimport shutil\nimport sys\nshutil.copy(sys.argv[1], sys.argv[2])\n",
      "[START_DIR]/src/testing/buildbot/chromium.linux.json",
      "/path/to/tmp/json"
    ],
    "env": {
      "CHROME_HEADLESS": "1"
    },
    "name": "read test spec (chromium.linux.json)",
    "~followup_annotations": [
      "@@@STEP_TEXT@path: [START_DIR]/src/testing/buildbot/chromium.linux.json@@@",
      "@@@STEP_LOG_LINE@json.output@{@@@",
      "@@@STEP_LOG_LINE@json.output@  \"Android Tests\": {@@@",
      "@@@STEP_LOG_LINE@json.output@    \"junit_tests\": [@@@",
      "@@@STEP_LOG_LINE@json.output@      {@@@",
      "@@@STEP_LOG_LINE@json.output@        \"test\": \"base_junit_tests\"@@@",
      "@@@STEP_LOG_LINE@json.output@      }@@@",
      "@@@STEP_LOG_LINE@json.output@    ]@@@",
      "@@@STEP_LOG_LINE@json.output@  }@@@",
      "@@@STEP_LOG_LINE@json.output@}@@@",
      "@@@STEP_LOG_END@json.output@@@"
    ]
  },
  {
    "cmd": [
      "python",
      "-u",
      "\nimport shutil, sys, os\nshutil.rmtree(sys.argv[1], True)\nshutil.rmtree(sys.argv[2], True)\ntry:\n  os.remove(sys.argv[3])\nexcept OSError:\n  pass\nfor base, _dirs, files in os.walk(sys.argv[4]):\n  for f in files:\n    if f.endswith('.pyc'):\n      os.remove(os.path.join(base, f))\n",
      "[START_DIR]/src/out/Release/debug_info_dumps",
      "[START_DIR]/src/out/Release/test_logs",
      "[START_DIR]/src/out/build_product.zip",
      "[START_DIR]/src"
    ],
    "env": {
      "CHROME_HEADLESS": "1"
    },
    "infra_step": true,
    "name": "clean local files",
    "~followup_annotations": [
      "@@@STEP_LOG_LINE@python.inline@@@@",
      "@@@STEP_LOG_LINE@python.inline@import shutil, sys, os@@@",
      "@@@STEP_LOG_LINE@python.inline@shutil.rmtree(sys.argv[1], True)@@@",
      "@@@STEP_LOG_LINE@python.inline@shutil.rmtree(sys.argv[2], True)@@@",
      "@@@STEP_LOG_LINE@python.inline@try:@@@",
      "@@@STEP_LOG_LINE@python.inline@  os.remove(sys.argv[3])@@@",
      "@@@STEP_LOG_LINE@python.inline@except OSError:@@@",
      "@@@STEP_LOG_LINE@python.inline@  pass@@@",
      "@@@STEP_LOG_LINE@python.inline@for base, _dirs, files in os.walk(sys.argv[4]):@@@",
      "@@@STEP_LOG_LINE@python.inline@  for f in files:@@@",
      "@@@STEP_LOG_LINE@python.inline@    if f.endswith('.pyc'):@@@",
      "@@@STEP_LOG_LINE@python.inline@      os.remove(os.path.join(base, f))@@@",
      "@@@STEP_LOG_END@python.inline@@@"
    ]
  },
  {
    "cmd": [
      "[START_DIR]/src/build/tree_truth.sh",
      "[START_DIR]/src",
      "src"
    ],
    "env": {
      "CHROME_HEADLESS": "1"
    },
    "name": "tree truth steps"
  },
  {
    "cmd": [
      "python",
      "-u",
      "RECIPE_MODULE[recipe_engine::file]/resources/fileutil.py",
      "--json-output",
      "/path/to/tmp/json",
      "rmtree",
      "[START_DIR]/src/out/Release"
    ],
    "env": {
      "CHROME_HEADLESS": "1"
    },
    "infra_step": true,
    "name": "build directory"
  },
  {
    "cmd": [
      "python",
      "-u",
      "RECIPE_PACKAGE_REPO[build]/scripts/tools/runit.py",
      "--show-path",
      "--",
      "python",
      "RECIPE_PACKAGE_REPO[build]/scripts/slave/extract_build.py",
      "--gsutil-py-path",
      "RECIPE_PACKAGE_REPO[depot_tools]/gsutil.py",
      "--target",
      "Release",
      "--src-dir",
      "[START_DIR]/src",
      "--slave-utils-gsutil-py-path",
      "RECIPE_PACKAGE_REPO[depot_tools]/gsutil.py",
      "--build-url",
      "gs://chromium-linux-archive/chromium.linux/Android Builder/full-build-linux.zip",
      "--build_revision",
      "f27fede2220bcd326aee3e86ddfd4ebd0fe58cb9",
      "--master-name",
      "chromium.linux",
      "--build-number",
      "571"
    ],
    "env": {
      "CHROME_HEADLESS": "1"
    },
    "infra_step": true,
    "name": "extract build"
  },
  {
    "cmd": [
      "python",
      "-u",
      "RECIPE_MODULE[build::adb]/resources/list_devices.py",
      "['[START_DIR]/src/third_party/android_tools/sdk/platform-tools/adb', 'devices']",
      "/path/to/tmp/json"
    ],
    "env": {
      "CHROME_HEADLESS": "1",
      "PATH": "[START_DIR]/src/third_party/android_tools/sdk/platform-tools:[START_DIR]/src/build/android:<PATH>"
    },
    "name": "List adb devices",
    "~followup_annotations": [
      "@@@STEP_LOG_LINE@json.output@[@@@",
      "@@@STEP_LOG_LINE@json.output@  \"014E1F310401C009\"@@@",
      "@@@STEP_LOG_LINE@json.output@]@@@",
      "@@@STEP_LOG_END@json.output@@@"
    ]
  },
  {
    "cmd": [
      "python",
      "-u",
      "\nimport subprocess\nimport sys\nadb_path = sys.argv[1]\nfor device in sys.argv[2:]:\n  print 'Attempting to root device %s ...' % (device)\n  subprocess.check_call([adb_path, '-s', device, 'root'])\n  subprocess.check_call([adb_path, '-s', device, 'wait-for-device'])\n  print 'Finished rooting device %s' % (device)\n",
      "[START_DIR]/src/third_party/android_tools/sdk/platform-tools/adb",
      "014E1F310401C009"
    ],
    "env": {
      "CHROME_HEADLESS": "1",
      "PATH": "[START_DIR]/src/third_party/android_tools/sdk/platform-tools:[START_DIR]/src/build/android:<PATH>"
    },
    "name": "Root devices",
    "~followup_annotations": [
      "@@@STEP_LOG_LINE@python.inline@@@@",
      "@@@STEP_LOG_LINE@python.inline@import subprocess@@@",
      "@@@STEP_LOG_LINE@python.inline@import sys@@@",
      "@@@STEP_LOG_LINE@python.inline@adb_path = sys.argv[1]@@@",
      "@@@STEP_LOG_LINE@python.inline@for device in sys.argv[2:]:@@@",
      "@@@STEP_LOG_LINE@python.inline@  print 'Attempting to root device %s ...' % (device)@@@",
      "@@@STEP_LOG_LINE@python.inline@  subprocess.check_call([adb_path, '-s', device, 'root'])@@@",
      "@@@STEP_LOG_LINE@python.inline@  subprocess.check_call([adb_path, '-s', device, 'wait-for-device'])@@@",
      "@@@STEP_LOG_LINE@python.inline@  print 'Finished rooting device %s' % (device)@@@",
      "@@@STEP_LOG_END@python.inline@@@"
    ]
  },
  {
    "cmd": [],
    "env": {
      "CHROME_HEADLESS": "1",
      "PATH": "[START_DIR]/src/third_party/android_tools/sdk/platform-tools:[START_DIR]/src/build/android:<PATH>"
    },
    "name": "test_pre_run"
  },
  {
    "cmd": [],
    "env": {
      "CHROME_HEADLESS": "1",
      "PATH": "[START_DIR]/src/third_party/android_tools/sdk/platform-tools:[START_DIR]/src/build/android:<PATH>"
    },
    "name": "base_junit_tests",
    "~followup_annotations": [
      "@@@STEP_TEXT@<br/>failures:<br/>Test.Two<br/>@@@",
      "@@@STEP_FAILURE@@@"
    ]
  },
  {
    "cmd": [
      "vpython",
      "-u",
      "[START_DIR]/src/out/Release/bin/run_base_junit_tests",
      "--verbose",
      "--release",
      "--json-results-file",
      "/path/to/tmp/json"
    ],
    "env": {
      "CHROME_HEADLESS": "1",
      "PATH": "[START_DIR]/src/third_party/android_tools/sdk/platform-tools:[START_DIR]/src/build/android:<PATH>"
    },
    "name": "base_junit_tests.base_junit_tests",
    "~followup_annotations": [
      "@@@STEP_NEST_LEVEL@1@@@",
      "step returned non-zero exit code: 1",
      "@@@STEP_FAILURE@@@"
    ]
  },
  {
    "cmd": [
      "python",
      "-u",
      "RECIPE_MODULE[build::test_results]/resources/upload_test_results.py",
      "--input-json",
      "{\"per_iteration_data\": [{\"Test.One\": [{\"elapsed_time_ms\": 0, \"output_snippet\": \":)\", \"status\": \"SUCCESS\"}], \"Test.Three\": [{\"elapsed_time_ms\": 0, \"output_snippet\": \"\", \"status\": \"SUCCESS\"}], \"Test.Two\": [{\"elapsed_time_ms\": 0, \"output_snippet\": \":(\", \"status\": \"FAILURE\"}]}]}",
      "--master-name",
      "chromium.linux",
      "--builder-name",
      "Android Tests",
      "--build-number",
      "571",
      "--test-type",
      "base_junit_tests",
      "--test-results-server",
      "test-results.appspot.com",
      "--chrome-revision",
      "refs/heads/master@{#170242}"
    ],
    "env": {
      "CHROME_HEADLESS": "1",
      "PATH": "[START_DIR]/src/third_party/android_tools/sdk/platform-tools:[START_DIR]/src/build/android:<PATH>"
    },
    "name": "base_junit_tests.Upload to test-results [base_junit_tests]",
    "~followup_annotations": [
      "@@@STEP_NEST_LEVEL@1@@@"
    ]
  },
  {
    "cmd": [
      "python",
      "-u",
      "\nimport glob, os, sys\nfor report in glob.glob(sys.argv[1]):\n  with open(report, 'r') as f:\n    for l in f.readlines():\n      print l\n  os.remove(report)\n",
      "[START_DIR]/src/out/Release/test_logs/*.log"
    ],
    "env": {
      "CHROME_HEADLESS": "1",
      "PATH": "[START_DIR]/src/third_party/android_tools/sdk/platform-tools:[START_DIR]/src/build/android:<PATH>"
    },
    "name": "test_report",
    "~followup_annotations": [
      "@@@STEP_LOG_LINE@python.inline@@@@",
      "@@@STEP_LOG_LINE@python.inline@import glob, os, sys@@@",
      "@@@STEP_LOG_LINE@python.inline@for report in glob.glob(sys.argv[1]):@@@",
      "@@@STEP_LOG_LINE@python.inline@  with open(report, 'r') as f:@@@",
      "@@@STEP_LOG_LINE@python.inline@    for l in f.readlines():@@@",
      "@@@STEP_LOG_LINE@python.inline@      print l@@@",
      "@@@STEP_LOG_LINE@python.inline@  os.remove(report)@@@",
      "@@@STEP_LOG_END@python.inline@@@"
    ]
  },
  {
    "name": "$result",
    "reason": "1 tests failed: ['base_junit_tests']",
    "recipe_result": null,
    "status_code": 1
  }
]