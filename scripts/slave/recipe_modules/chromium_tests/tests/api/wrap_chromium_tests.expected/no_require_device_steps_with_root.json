[
  {
    "cmd": [
      "python",
      "-u",
      "RECIPE_MODULE[build::adb]/resources/list_devices.py",
      "['None/third_party/android_tools/sdk/platform-tools/adb', 'devices']",
      "/path/to/tmp/json"
    ],
    "env": {
      "PATH": "None/third_party/android_tools/sdk/platform-tools:None/build/android:<PATH>"
    },
    "name": "List adb devices",
    "~followup_annotations": [
      "@@@STEP_LOG_LINE@json.output@[@@@",
      "@@@STEP_LOG_LINE@json.output@  \"014E1F310401C009\"@@@",
      "@@@STEP_LOG_LINE@json.output@]@@@",
      "@@@STEP_LOG_END@json.output@@@"
    ]
  },
  {
    "cmd": [
      "python",
      "-u",
      "\nimport subprocess\nimport sys\nadb_path = sys.argv[1]\nfor device in sys.argv[2:]:\n  print 'Attempting to root device %s ...' % (device)\n  subprocess.check_call([adb_path, '-s', device, 'root'])\n  subprocess.check_call([adb_path, '-s', device, 'wait-for-device'])\n  print 'Finished rooting device %s' % (device)\n",
      "None/third_party/android_tools/sdk/platform-tools/adb",
      "014E1F310401C009"
    ],
    "env": {
      "PATH": "None/third_party/android_tools/sdk/platform-tools:None/build/android:<PATH>"
    },
    "name": "Root devices",
    "~followup_annotations": [
      "@@@STEP_LOG_LINE@python.inline@@@@",
      "@@@STEP_LOG_LINE@python.inline@import subprocess@@@",
      "@@@STEP_LOG_LINE@python.inline@import sys@@@",
      "@@@STEP_LOG_LINE@python.inline@adb_path = sys.argv[1]@@@",
      "@@@STEP_LOG_LINE@python.inline@for device in sys.argv[2:]:@@@",
      "@@@STEP_LOG_LINE@python.inline@  print 'Attempting to root device %s ...' % (device)@@@",
      "@@@STEP_LOG_LINE@python.inline@  subprocess.check_call([adb_path, '-s', device, 'root'])@@@",
      "@@@STEP_LOG_LINE@python.inline@  subprocess.check_call([adb_path, '-s', device, 'wait-for-device'])@@@",
      "@@@STEP_LOG_LINE@python.inline@  print 'Finished rooting device %s' % (device)@@@",
      "@@@STEP_LOG_END@python.inline@@@"
    ]
  },
  {
    "cmd": [
      "python",
      "-u",
      "\nimport glob, os, sys\nfor report in glob.glob(sys.argv[1]):\n  with open(report, 'r') as f:\n    for l in f.readlines():\n      print l\n  os.remove(report)\n",
      "None/out/Debug/test_logs/*.log"
    ],
    "env": {
      "PATH": "None/third_party/android_tools/sdk/platform-tools:None/build/android:<PATH>"
    },
    "name": "test_report",
    "~followup_annotations": [
      "@@@STEP_LOG_LINE@python.inline@@@@",
      "@@@STEP_LOG_LINE@python.inline@import glob, os, sys@@@",
      "@@@STEP_LOG_LINE@python.inline@for report in glob.glob(sys.argv[1]):@@@",
      "@@@STEP_LOG_LINE@python.inline@  with open(report, 'r') as f:@@@",
      "@@@STEP_LOG_LINE@python.inline@    for l in f.readlines():@@@",
      "@@@STEP_LOG_LINE@python.inline@      print l@@@",
      "@@@STEP_LOG_LINE@python.inline@  os.remove(report)@@@",
      "@@@STEP_LOG_END@python.inline@@@"
    ]
  },
  {
    "jsonResult": null,
    "name": "$result"
  }
]