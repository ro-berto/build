// Copyright 2020 The Chromium Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.

syntax = "proto3";
package recipe_modules.build.archive;

// Next id: 7
message ArchiveData {
  // A list of relative paths to files that should be archived. All files are
  // relative to the build directory, which is passed alongside this proto to
  // the archiving code.
  repeated string files = 1;
  // A list of globs that will be expanded to files that should be archived. All
  // globs are expanded relative to the build directory, which is passed
  // alongside this proto to the archiving code.
  repeated string file_globs = 6;
  // A list of relative paths to directories that should be archived. All
  // directories are relative to the build directory, which is passed alongside
  // this proto to the archiving code.
  // Note: The |files| and |dirs| fields don't interact. Both are relative to
  // the build directory.
  repeated string dirs = 2;
  // The name of the google cloud storage bucket to upload to.
  string gcs_bucket = 3;
  // The destination path in the bucket to upload to. The following string
  // substitutions will be made:
  // {%position%} -> commit position extracted from got_revision_cp (or
  //     got_src_revision_cp if it is not set).
  // {%commit%} -> commit hash from got_revision.
  string gcs_path = 4;

  enum ArchiveType {
    ARCHIVE_TYPE_UNSPECIFIED = 0;

    // All input files and directories are zipped. gcs_path should be a path
    // whose final component is the name of the archive file.
    // This is the default if nothing is set.
    ARCHIVE_TYPE_ZIP = 1;

    // Upload files unchanged. Directories are not supported. gcs_path should
    // be a path to a directory where the uploaded files will be placed.
    ARCHIVE_TYPE_FILES = 2;
  }
  ArchiveType archive_type = 5;
}

// Next id: 2
message InputProperties {
  repeated ArchiveData archive_datas = 1;
}
