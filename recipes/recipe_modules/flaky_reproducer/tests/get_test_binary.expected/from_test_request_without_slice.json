[
  {
    "cmd": [],
    "name": "get_test_binary",
    "~followup_annotations": [
      "@@@STEP_EXCEPTION@@@"
    ]
  },
  {
    "cmd": [],
    "name": "get_test_binary.install infra/tools/luci/swarming",
    "~followup_annotations": [
      "@@@STEP_NEST_LEVEL@1@@@"
    ]
  },
  {
    "cmd": [
      "vpython3",
      "-u",
      "RECIPE_MODULE[recipe_engine::file]/resources/fileutil.py",
      "--json-output",
      "/path/to/tmp/json",
      "ensure-directory",
      "--mode",
      "0777",
      "[START_DIR]/cipd_tool/infra/tools/luci/swarming/swarming_module_pin"
    ],
    "infra_step": true,
    "name": "get_test_binary.install infra/tools/luci/swarming.ensure package directory",
    "~followup_annotations": [
      "@@@STEP_NEST_LEVEL@2@@@"
    ]
  },
  {
    "cmd": [
      "cipd",
      "ensure",
      "-root",
      "[START_DIR]/cipd_tool/infra/tools/luci/swarming/swarming_module_pin",
      "-ensure-file",
      "infra/tools/luci/swarming/${platform} swarming_module_pin",
      "-max-threads",
      "0",
      "-json-output",
      "/path/to/tmp/json"
    ],
    "infra_step": true,
    "name": "get_test_binary.install infra/tools/luci/swarming.ensure_installed",
    "~followup_annotations": [
      "@@@STEP_NEST_LEVEL@2@@@",
      "@@@STEP_LOG_LINE@json.output@{@@@",
      "@@@STEP_LOG_LINE@json.output@  \"result\": {@@@",
      "@@@STEP_LOG_LINE@json.output@    \"\": [@@@",
      "@@@STEP_LOG_LINE@json.output@      {@@@",
      "@@@STEP_LOG_LINE@json.output@        \"instance_id\": \"resolved-instance_id-of-swarming_module_\", @@@",
      "@@@STEP_LOG_LINE@json.output@        \"package\": \"infra/tools/luci/swarming/resolved-platform\"@@@",
      "@@@STEP_LOG_LINE@json.output@      }@@@",
      "@@@STEP_LOG_LINE@json.output@    ]@@@",
      "@@@STEP_LOG_LINE@json.output@  }@@@",
      "@@@STEP_LOG_LINE@json.output@}@@@",
      "@@@STEP_LOG_END@json.output@@@"
    ]
  },
  {
    "cmd": [
      "[START_DIR]/cipd_tool/infra/tools/luci/swarming/swarming_module_pin/swarming",
      "request-show",
      "-server",
      "https://example.swarmingserver.appspot.com",
      "54321fffffabc123"
    ],
    "infra_step": true,
    "name": "get_test_binary.get_test_binary from 54321fffffabc123",
    "~followup_annotations": [
      "@@@STEP_NEST_LEVEL@1@@@",
      "@@@STEP_LOG_LINE@json.output@{@@@",
      "@@@STEP_LOG_LINE@json.output@  \"name\": \"led: base_unittests\", @@@",
      "@@@STEP_LOG_LINE@json.output@  \"priority\": \"25\", @@@",
      "@@@STEP_LOG_LINE@json.output@  \"realm\": \"chromium:ci\", @@@",
      "@@@STEP_LOG_LINE@json.output@  \"resultdb\": {@@@",
      "@@@STEP_LOG_LINE@json.output@    \"enable\": true@@@",
      "@@@STEP_LOG_LINE@json.output@  }, @@@",
      "@@@STEP_LOG_LINE@json.output@  \"service_account\": \"none\", @@@",
      "@@@STEP_LOG_LINE@json.output@  \"tags\": [@@@",
      "@@@STEP_LOG_LINE@json.output@    \"authenticated:user:chromium-ci-builder@chops-service-accounts.iam.gserviceaccount.com\", @@@",
      "@@@STEP_LOG_LINE@json.output@    \"bucket:ci\", @@@",
      "@@@STEP_LOG_LINE@json.output@    \"buildername:Win11 Tests x64\"@@@",
      "@@@STEP_LOG_LINE@json.output@  ], @@@",
      "@@@STEP_LOG_LINE@json.output@  \"task_slices\": []@@@",
      "@@@STEP_LOG_LINE@json.output@}@@@",
      "@@@STEP_LOG_END@json.output@@@"
    ]
  },
  {
    "cmd": [],
    "name": "RECIPE CRASH (Uncaught exception)",
    "~followup_annotations": [
      "@@@STEP_EXCEPTION@@@",
      "The recipe has crashed at point 'Uncaught exception'!",
      "",
      "Traceback (most recent call last):",
      "  File \"RECIPE_REPO[build]/recipes/recipe_modules/flaky_reproducer/tests/get_test_binary.py\", line 22, in RunSteps",
      "    test_binary = api.flaky_reproducer.get_test_binary(task_id)",
      "  File \"RECIPE_REPO[build]/recipes/recipe_modules/flaky_reproducer/api.py\", line 100, in get_test_binary",
      "    test_binary = create_test_binary_from_task_request(task_request)",
      "  File \"RECIPE_REPO[build]/recipes/recipe_modules/flaky_reproducer/libs/test_binary/__init__.py\", line 24, in create_test_binary_from_task_request",
      "    raise ValueError(\"No TaskSlice found in the TaskRequest.\")",
      "ValueError('No TaskSlice found in the TaskRequest.')"
    ]
  },
  {
    "failure": {
      "humanReason": "Uncaught Exception: ValueError('No TaskSlice found in the TaskRequest.')"
    },
    "name": "$result"
  }
]